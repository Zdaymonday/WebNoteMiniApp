{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edit-note-form-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"edit-note-form-inner\"\n};\nconst _hoisted_3 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, _toDisplayString($props.edit_note.title), 1 /* TEXT */), _createElementVNode(\"textarea\", {\n    rows: \"10\",\n    value: $props.edit_note.text\n  }, \"                \\r\\n            \", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeForm && $options.closeForm(...args))\n  }, \"Abort\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.saveChanges && $options.saveChanges(...args))\n  }, \"Save changes\")])])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAwB;;EAC1BA,KAAK,EAAC;AAAsB;;;uBADrCC,oBAUM,OAVNC,UAUM,GATFC,oBAQM,OARNC,UAQM,GAPFD,oBAA4B,6BAAtBE,gBAAS,CAACC,KAAK,kBACrBH,oBACW;IADDI,IAAI,EAAC,IAAI;IAAGC,KAAK,EAAEH,gBAAS,CAACI;KAAM,kCAC7C,8BACAN,oBAGM,cAFFA,oBAAyC;IAAhCO,OAAK,yCAAEC,iDAAS;KAAE,OAAK,GAChCR,oBAAkD;IAAzCO,OAAK,yCAAEC,qDAAW;KAAE,cAAY","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$props","title","rows","value","text","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\Администратор\\source\\repos\\WebNoteMiniApp\\webnoteminiapp.vue\\src\\components\\EditNoteForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"edit-note-form-wrapper\">\r\n        <div class=\"edit-note-form-inner\">\r\n            <h3>{{edit_note.title}}</h3>\r\n            <textarea rows=\"10\"  :value=\"edit_note.text\">                \r\n            </textarea>\r\n            <div>\r\n                <button @click=\"closeForm\">Abort</button>\r\n                <button @click=\"saveChanges\">Save changes</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"edit-note-form\",\r\n    props: {\r\n        edit_note: [Object],\r\n        show: [Boolean],\r\n    },\r\n    methods: {\r\n        changeNoteText(e){\r\n            e.preventDefault();\r\n        },\r\n        saveChanges() {\r\n            this.updateNote();\r\n        },\r\n        closeForm() {\r\n            this.$emit(\"update:show\", false)\r\n        },\r\n        async updateNote(){\r\n            let response = await fetch(\"https://localhost:7232/notes\", {\r\n                method: \"Put\",\r\n                headers: {\"Content-type\":\"application/json\"},\r\n                body: JSON.stringify(this.edit_note),\r\n            });\r\n            if(response.ok){\r\n                this.closeForm();\r\n            }\r\n            else{\r\n                console.log(response.statusText);\r\n            }\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.edit-note-form-wrapper{\r\n    left: 0;right: 0; top: 0; bottom: 0;\r\n    position: fixed;\r\n    background: #76767610;\r\n}\r\n.edit-note-form-inner{\r\n    border-radius: 20px;\r\n    padding: 20px;\r\n    margin-top: 200px;\r\n    margin-left: 100px;\r\n    background: #FFFFFFF1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 30%;\r\n}\r\ntextarea{\r\n    height: max-content;\r\n    \r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}