{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"note-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_note_tile = _resolveComponent(\"note-tile\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notes, note => {\n    return _openBlock(), _createBlock(_component_note_tile, {\n      note: note,\n      key: note.id\n    }, null, 8 /* PROPS */, [\"note\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAgB;;;uBAA3BC,oBAEM,OAFNC,UAEM,sBADFD,oBAAyEE,6BAA/CC,WAAK,EAAbC,IAAI;yBAAtBC,aAAyEC;MAAvCF,IAAI,EAAEA,IAAI;MAAGG,GAAG,EAAEH,IAAI,CAACI","names":["class","_createElementBlock","_hoisted_1","_Fragment","$data","note","_createBlock","_component_note_tile","key","id"],"sourceRoot":"","sources":["C:\\Users\\Администратор\\source\\repos\\WebNoteMiniApp\\webnoteminiapp.vue\\src\\components\\NoteList.vue"],"sourcesContent":["<template>\r\n    <div class=\"note-container\">\r\n        <note-tile v-for=\"note in notes\" :note=\"note\" :key=\"note.id\"></note-tile>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"note-list\",\r\n    data() {\r\n        return {\r\n            notes: [],\r\n        }\r\n    },\r\n    methods: {\r\n        async getNotes() {\r\n            let resposne = await fetch(\"https://localhost:7232/posts\", {\r\n                method: \"Get\",\r\n                headers: { \"Accept\": \"application/json\" },\r\n            });\r\n            if (resposne.ok) {\r\n                this.notes = await resposne.json();\r\n            }\r\n        }\r\n    },\r\n    mounted(){\r\n        this.getNotes();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.note-container {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n    grid-gap: 3px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}