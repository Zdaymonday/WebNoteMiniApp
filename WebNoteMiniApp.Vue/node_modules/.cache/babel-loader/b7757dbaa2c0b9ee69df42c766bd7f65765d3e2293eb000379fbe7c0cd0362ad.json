{"ast":null,"code":"export const noteModule = {\n  state: {\n    notes: []\n  },\n  getters: {},\n  mutations: {\n    editNotes(state, notes) {\n      state.notes = notes;\n    }\n  },\n  actions: {\n    async getNotes(context) {\n      let token = context.rootState.auth.token;\n      let resposne = await fetch(\"https://localhost:7232/notes\", {\n        method: \"Get\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (resposne.ok) {\n        let arr = await resposne.json();\n        context.commit('editNotes', arr);\n      }\n    },\n    async editNote(context, note) {\n      let token = context.rootState.auth.token;\n      let resposne = await fetch(\"https://localhost:7232/notes\", {\n        method: \"Put\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(note)\n      });\n      if (resposne.ok) {\n        let old_note = context.state.notes.find(n => n.id == note.id);\n        old_note.text = note.text;\n      }\n    }\n  },\n  namespaced: true\n};","map":{"version":3,"names":["noteModule","state","notes","getters","mutations","editNotes","actions","getNotes","context","token","rootState","auth","resposne","fetch","method","headers","ok","arr","json","commit","editNote","note","body","JSON","stringify","old_note","find","n","id","text","namespaced"],"sources":["C:/Users/Администратор/source/repos/WebNoteMiniApp/webnoteminiapp.vue/src/Store/noteModule.js"],"sourcesContent":["export const noteModule  = {\r\n    state: {\r\n        notes: [],\r\n    },\r\n    getters: {\r\n    },\r\n    mutations:{\r\n        editNotes(state, notes){\r\n            state.notes = notes;\r\n        }\r\n    },\r\n\r\n    actions:{\r\n        async getNotes(context) {\r\n            let token = context.rootState.auth.token;\r\n            let resposne = await fetch(\"https://localhost:7232/notes\", {\r\n                method: \"Get\",\r\n                headers: { \"Accept\": \"application/json\", \"Authorization\":`Bearer ${token}`},\r\n            });\r\n            if (resposne.ok) {\r\n                let arr = await resposne.json();\r\n                context.commit('editNotes', arr);\r\n            }\r\n        },\r\n        async editNote(context, note){\r\n            let token = context.rootState.auth.token;\r\n            let resposne = await fetch(\"https://localhost:7232/notes\", {\r\n                method: \"Put\",\r\n                headers: { \"Content-type\": \"application/json\", \"Authorization\":`Bearer ${token}`},\r\n                body: JSON.stringify(note),\r\n            });\r\n            if (resposne.ok) {\r\n                let old_note = context.state.notes.find(n => n.id == note.id);\r\n                old_note.text = note.text;\r\n            }\r\n        }\r\n    },\r\n    namespaced: true,\r\n}"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAI;EACvBC,KAAK,EAAE;IACHC,KAAK,EAAE;EACX,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAC;IACNC,SAAS,CAACJ,KAAK,EAAEC,KAAK,EAAC;MACnBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACvB;EACJ,CAAC;EAEDI,OAAO,EAAC;IACJ,MAAMC,QAAQ,CAACC,OAAO,EAAE;MACpB,IAAIC,KAAK,GAAGD,OAAO,CAACE,SAAS,CAACC,IAAI,CAACF,KAAK;MACxC,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACvDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,QAAQ,EAAE,kBAAkB;UAAE,eAAe,EAAE,UAASN,KAAM;QAAC;MAC9E,CAAC,CAAC;MACF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACb,IAAIC,GAAG,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;QAC/BV,OAAO,CAACW,MAAM,CAAC,WAAW,EAAEF,GAAG,CAAC;MACpC;IACJ,CAAC;IACD,MAAMG,QAAQ,CAACZ,OAAO,EAAEa,IAAI,EAAC;MACzB,IAAIZ,KAAK,GAAGD,OAAO,CAACE,SAAS,CAACC,IAAI,CAACF,KAAK;MACxC,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACvDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE,kBAAkB;UAAE,eAAe,EAAE,UAASN,KAAM;QAAC,CAAC;QACjFa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;MAC7B,CAAC,CAAC;MACF,IAAIT,QAAQ,CAACI,EAAE,EAAE;QACb,IAAIS,QAAQ,GAAGjB,OAAO,CAACP,KAAK,CAACC,KAAK,CAACwB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,IAAIP,IAAI,CAACO,EAAE,CAAC;QAC7DH,QAAQ,CAACI,IAAI,GAAGR,IAAI,CAACQ,IAAI;MAC7B;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}