{"ast":null,"code":"import { withModifiers as _withModifiers, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-63af8a91\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  class: \"form-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_form_button = _resolveComponent(\"form-button\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"edit-note-form-inner\",\n    draggable: \"true\",\n    onClick: _cache[5] || (_cache[5] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"input\", {\n    type: \"text\",\n    value: $data.new_title,\n    onDragstart: [_cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"])), _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"]))]\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1), _createElementVNode(\"textarea\", {\n    rows: \"10\",\n    value: this.new_text,\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.onNoteTextChanged && $options.onNoteTextChanged(...args)),\n    onDragstart: [_cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"])), _cache[4] || (_cache[4] = _withModifiers(() => {}, [\"prevent\"]))]\n  }, \"\\r\\n            \", 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_form_button, {\n    onClick: $options.closeForm\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Abort\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_form_button, {\n    onClick: $options.saveChanges\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Save changes\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])]);\n}","map":{"version":3,"mappings":";;;;;EAKiBA,KAAK,EAAC;AAAc;;;uBAJ7BC,oBAQM;IARDD,KAAK,EAAC,sBAAsB;IAACE,SAAS,EAAC,MAAM;IAAGC,OAAK,2CAAN,QAAW;MAC3DC,oBAA0E;IAAnEC,IAAI,EAAC,MAAM;IAAEC,KAAK,EAAEC,eAAS;IAAGC,WAAS,4CAAV,QAAe,uDAAC,QAAkB;wDACxEJ,oBACW;IADDK,IAAI,EAAC,IAAI;IAAGH,KAAK,OAAOI,QAAQ;IAAGC,QAAM,yCAAEC,iEAAiB;IAAGJ,WAAS,4CAAV,QAAe,uDAAC,QAAkB;KAAC,kBAC3G,+CACAJ,oBAGM,OAHNS,UAGM,GAFFC,aAAmDC;IAArCZ,OAAK,EAAES;EAAS;sBAAE,MAAK,kBAAL,OAAK;;kCACrCE,aAA4DC;IAA9CZ,OAAK,EAAES;EAAW;sBAAE,MAAY,kBAAZ,cAAY","names":["class","_createElementBlock","draggable","onClick","_createElementVNode","type","value","$data","onDragstart","rows","new_text","onChange","$options","_hoisted_3","_createVNode","_component_form_button"],"sourceRoot":"","sources":["C:\\Users\\Администратор\\source\\repos\\WebNoteMiniApp\\webnoteminiapp.vue\\src\\components\\UI\\noteForm.vue"],"sourcesContent":["<template>\r\n        <div class=\"edit-note-form-inner\" draggable=\"true\"  @click.stop>\r\n            <input type=\"text\" :value=\"new_title\" @dragstart.stop @dragstart.prevent/>\r\n            <textarea rows=\"10\"  :value=\"this.new_text\" @change=\"onNoteTextChanged\" @dragstart.stop @dragstart.prevent>\r\n            </textarea>\r\n            <div class=\"form-buttons\">\r\n                <form-button @click=\"closeForm\">Abort</form-button>\r\n                <form-button @click=\"saveChanges\">Save changes</form-button>\r\n            </div>\r\n        </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\n\r\nexport default {\r\n    name: \"note-form\",\r\n    props: {\r\n        edit_note: [Object],\r\n        innershow: [Boolean],\r\n    },\r\n    methods: {\r\n        ...mapActions({\r\n            editNote: \"notes/editNote\",\r\n            addNote: \"notes/addNote\",\r\n        }),\r\n        onNoteTextChanged(e){\r\n            this.new_text = e.target.value;\r\n        },\r\n        saveChanges() {\r\n            let new_note = {};\r\n            new_note.text = this.new_text;\r\n            new_note.title = this.new_title;\r\n\r\n            if(this.edit_note !== null){\r\n                new_note.id = this.edit_note.id;\r\n                this.editNote(new_note);\r\n            }\r\n            else{\r\n                this.addNote(new_note);\r\n            }\r\n            \r\n            this.closeForm();\r\n        },\r\n        closeForm() {\r\n            this.$emit(\"update:innershow\", false)\r\n        }, \r\n        onFormClick(e){\r\n            e.stopPropagation();\r\n        },\r\n    },\r\n    data(){\r\n        return {\r\n            new_text: \"\",\r\n            new_title: \"\",\r\n        }\r\n    },\r\n    mounted() {\r\n        this.new_text = this.edit_note.text;\r\n        this.new_title = this.edit_note.title;\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.edit-note-form-inner{\r\n    position: absolute;\r\n    border-radius: 20px;\r\n    padding: 20px;\r\n    top: 200px;\r\n    left: 100px;\r\n    background: #FFFFFFF1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: fit-content;\r\n    min-width: 30%;\r\n}\r\ntextarea{\r\n    height: max-content;\r\n    min-width: 400px;\r\n}\r\n.form-buttons{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 10px;\r\n}\r\nbutton{\r\n    margin-left: 10px;\r\n    width: 150px;\r\n}\r\ninput{\r\n    background: #FFFFFFF1;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-bottom: 1px solid #555555;\r\n    margin-bottom: 5px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}