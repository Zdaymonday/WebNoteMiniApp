{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edit-note-form-inner\"\n};\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"edit-note-form-wrapper\",\n    onKeypress: _cache[3] || (_cache[3] = (...args) => $options.onKeyPres && $options.onKeyPres(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h3\", null, _toDisplayString($props.edit_note.title), 1 /* TEXT */), _createElementVNode(\"textarea\", {\n    rows: \"10\",\n    value: this.new_text,\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onNoteTextChanged && $options.onNoteTextChanged(...args))\n  }, \"\\r\\n            \", 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.closeForm && $options.closeForm(...args))\n  }, \"Abort\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.saveChanges && $options.saveChanges(...args))\n  }, \"Save changes\")])])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";;EAEaA,KAAK,EAAC;AAAsB;;;uBADrCC,oBAUM;IAVDD,KAAK,EAAC,wBAAwB;IAAEE,UAAQ,yCAAEC,iDAAS;MACpDC,oBAQM,OARNC,UAQM,GAPFD,oBAA4B,6BAAtBE,gBAAS,CAACC,KAAK,kBACrBH,oBACW;IADDI,IAAI,EAAC,IAAI;IAAGC,KAAK,OAAOC,QAAQ;IAAGC,QAAM,yCAAER,iEAAiB;KAAE,kBACxE,+CACAC,oBAGM,cAFFA,oBAAyC;IAAhCQ,OAAK,yCAAET,iDAAS;KAAE,OAAK,GAChCC,oBAAkD;IAAzCQ,OAAK,yCAAET,qDAAW;KAAE,cAAY","names":["class","_createElementBlock","onKeypress","$options","_createElementVNode","_hoisted_1","$props","title","rows","value","new_text","onChange","onClick"],"sourceRoot":"","sources":["C:\\Users\\Администратор\\source\\repos\\WebNoteMiniApp\\webnoteminiapp.vue\\src\\components\\EditNoteForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"edit-note-form-wrapper\" @keypress=\"onKeyPres\">\r\n        <div class=\"edit-note-form-inner\">\r\n            <h3>{{edit_note.title}}</h3>\r\n            <textarea rows=\"10\"  :value=\"this.new_text\" @change=\"onNoteTextChanged\">\r\n            </textarea>\r\n            <div>\r\n                <button @click=\"closeForm\">Abort</button>\r\n                <button @click=\"saveChanges\">Save changes</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\nexport default {\r\n    name: \"edit-note-form\",\r\n    props: {\r\n        edit_note: [Object],\r\n        show: [Boolean],\r\n    },\r\n    methods: {\r\n        ...mapActions({\r\n            editNote: \"notes/editNote\",\r\n        }),\r\n        onNoteTextChanged(e){\r\n            this.new_text = e.target.value;\r\n        },\r\n        saveChanges() {\r\n            let new_note = {};\r\n            Object.assign(new_note, this.edit_note);\r\n            new_note.text = this.new_text;\r\n            this.editNote(new_note);\r\n            this.closeForm();\r\n        },\r\n        closeForm() {\r\n            this.$emit(\"update:show\", false)\r\n        }, \r\n        onKeyPres(e){\r\n            if(e.key === \"Escape\") this.closeForm();\r\n        }       \r\n    },\r\n    data(){\r\n        return {\r\n            new_text: \"\",\r\n        }\r\n    },\r\n    mounted() {\r\n        this.new_text = this.edit_note.text;\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.edit-note-form-wrapper{\r\n    left: 0;right: 0; top: 0; bottom: 0;\r\n    position: fixed;\r\n    background: #76767690;\r\n}\r\n.edit-note-form-inner{\r\n    border-radius: 20px;\r\n    padding: 20px;\r\n    margin-top: 200px;\r\n    margin-left: 100px;\r\n    background: #FFFFFFF1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 30%;\r\n}\r\ntextarea{\r\n    height: max-content;\r\n    \r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}