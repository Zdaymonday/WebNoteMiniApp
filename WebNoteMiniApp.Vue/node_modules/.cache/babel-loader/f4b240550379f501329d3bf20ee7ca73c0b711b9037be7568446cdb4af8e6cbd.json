{"ast":null,"code":"export const authModule = {\n  state: {\n    needAuth: true,\n    token: \"\"\n  },\n  mutations: {\n    login(state) {\n      state.needAuth = false;\n    },\n    logout(state) {\n      state.needAuth = true;\n    },\n    setToken(state, token) {\n      state.token = token;\n    }\n  },\n  getters: {\n    isAuth(state) {\n      return state.isAuthenticated;\n    },\n    getToken(state) {\n      return state.token;\n    }\n  },\n  actions: {\n    async login(context, logindata) {\n      let credentials = {\n        userName: this.username,\n        password: this.password\n      };\n      let response = await fetch(\"https://localhost:7232/login\", {\n        method: \"Post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n      });\n      if (response.ok) {\n        let text = await response.text();\n        text = text.replaceAll('\"', \"\");\n        this.$store.commit(\"auth/setToken\", text);\n        this.$store.commit(\"auth/login\");\n      } else {\n        console.log(response.statusText);\n        this.hasErrors = true;\n      }\n    }\n  },\n  namespaced: true\n};","map":{"version":3,"names":["authModule","state","needAuth","token","mutations","login","logout","setToken","getters","isAuth","isAuthenticated","getToken","actions","context","logindata","credentials","userName","username","password","response","fetch","method","headers","body","JSON","stringify","ok","text","replaceAll","$store","commit","console","log","statusText","hasErrors","namespaced"],"sources":["C:/Users/Администратор/source/repos/WebNoteMiniApp/webnoteminiapp.vue/src/Store/authModule.js"],"sourcesContent":["export const authModule = {\r\n    state: {\r\n        needAuth : true,\r\n        token: \"\",\r\n    },\r\n\r\n    mutations: {\r\n        login(state){\r\n            state.needAuth = false;\r\n        },\r\n        logout(state){\r\n            state.needAuth = true;\r\n        },\r\n        setToken(state, token){\r\n            state.token = token;\r\n        }\r\n    },\r\n\r\n    getters: {\r\n        isAuth(state){\r\n            return state.isAuthenticated;\r\n        },\r\n        getToken(state){            \r\n            return state.token;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        async login(context, logindata) {\r\n            let credentials = {userName:this.username, password:this.password};\r\n            let response = await fetch(\"https://localhost:7232/login\", {\r\n                method: \"Post\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(credentials),\r\n            });\r\n            if (response.ok) {\r\n                let text = await response.text();\r\n                text = text.replaceAll('\"',\"\");\r\n                this.$store.commit(\"auth/setToken\", text);\r\n                this.$store.commit(\"auth/login\");\r\n            }\r\n            else{\r\n                console.log(response.statusText);\r\n                this.hasErrors = true;\r\n            }\r\n        }\r\n    },\r\n\r\n    namespaced: true,\r\n}"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG;EACtBC,KAAK,EAAE;IACHC,QAAQ,EAAG,IAAI;IACfC,KAAK,EAAE;EACX,CAAC;EAEDC,SAAS,EAAE;IACPC,KAAK,CAACJ,KAAK,EAAC;MACRA,KAAK,CAACC,QAAQ,GAAG,KAAK;IAC1B,CAAC;IACDI,MAAM,CAACL,KAAK,EAAC;MACTA,KAAK,CAACC,QAAQ,GAAG,IAAI;IACzB,CAAC;IACDK,QAAQ,CAACN,KAAK,EAAEE,KAAK,EAAC;MAClBF,KAAK,CAACE,KAAK,GAAGA,KAAK;IACvB;EACJ,CAAC;EAEDK,OAAO,EAAE;IACLC,MAAM,CAACR,KAAK,EAAC;MACT,OAAOA,KAAK,CAACS,eAAe;IAChC,CAAC;IACDC,QAAQ,CAACV,KAAK,EAAC;MACX,OAAOA,KAAK,CAACE,KAAK;IACtB;EACJ,CAAC;EAEDS,OAAO,EAAE;IACL,MAAMP,KAAK,CAACQ,OAAO,EAAEC,SAAS,EAAE;MAC5B,IAAIC,WAAW,GAAG;QAACC,QAAQ,EAAC,IAAI,CAACC,QAAQ;QAAEC,QAAQ,EAAC,IAAI,CAACA;MAAQ,CAAC;MAClE,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACvDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW;MACpC,CAAC,CAAC;MACF,IAAII,QAAQ,CAACO,EAAE,EAAE;QACb,IAAIC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,EAAE;QAChCA,IAAI,GAAGA,IAAI,CAACC,UAAU,CAAC,GAAG,EAAC,EAAE,CAAC;QAC9B,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,eAAe,EAAEH,IAAI,CAAC;QACzC,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,YAAY,CAAC;MACpC,CAAC,MACG;QACAC,OAAO,CAACC,GAAG,CAACb,QAAQ,CAACc,UAAU,CAAC;QAChC,IAAI,CAACC,SAAS,GAAG,IAAI;MACzB;IACJ;EACJ,CAAC;EAEDC,UAAU,EAAE;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}